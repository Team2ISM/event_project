@{
    ViewBag.Title = "List";
}

@model System.Collections.Generic.List<team2project.Models.EventViewModel>
@using System.Globalization
@using team2project.Models
@using System.Text.RegularExpressions
@section css{
    @Styles.Render("~/Content/Home/List.css")
    @Styles.Render("~/Content/jquery-ui.min.css")
    @Styles.Render("~/Content/jquery-ui.theme.min.css")
    @Styles.Render("~/Content/jquery-ui.structure.min.css")
}


<div class="container">
    <h1 class ="center blue-text">Мероприятия</h1>
    
    <!-- Dropdown Trigger -->
    <div class="width80">
        <div class="ui-widget left">
            <label class="left">Город: </label>
            <div class="ui-widget m-left">
                @Html.DropDownList("City", AvailableLocations, new { id = "combobox" })
            </div>
        </div>

        <div class="date-filters">
            @ConstructLink("Все мероприятия", null)
            @ConstructLink("На сегодня", "0")
            @ConstructLink("На 3 дня", "3")
            @ConstructLink("На неделю", "7")
        </div>
    </div>
    <table class="striped width80 centered" >
        <thead>
            <tr>
                <th>Заголовок</th>
                <th>Описание</th>
                <th>Дата, время</th>
                <th>Город</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var evnt in Model)
            {
                var result = "";
                var words = evnt.Description.Split(' ');
                if (words.Length <= 10)
                {
                    result = evnt.Description; 
                }
                else
                {
                    for (var i = 0; i != 10; i++)
                    {
                        result += " " + words[i];
                    }
                    result += "...";
                }
            
                <tr>
                    <td>@Html.RouteLink(evnt.Title, "EventDetails", new { evnt.Id })</td>
                    <td>@Html.RouteLink(result, "EventDetails", new { evnt.Id })</td>
                    <td>
                        @Html.RouteLink(evnt.FromDate != null ? evnt.FromDate.Value.ToString("dd MMMM yyyy") : "n/a", "EventDetails", new { evnt.Id })
                        @Html.RouteLink(",", "EventDetails", new { evnt.Id })
                        @Html.RouteLink(evnt.FromDate != null ? evnt.FromDate.Value.ToString("hh:mm") : "n/a", "EventDetails", new { evnt.Id })
                        
                </td>
                <td>@Html.RouteLink(evnt.Location, "EventDetails", new { evnt.Id })</td>
            </tr>
            }
        </tbody>
    </table>

</div>

@helper ConstructLink(string linkName, string nOfDaysToEvent)
{
    var filters = Request.Url.AbsolutePath.Split('/');

    if ((Regex.IsMatch(filters.LastOrDefault(), @"^\d+$") && filters.LastOrDefault() == nOfDaysToEvent) || (!Regex.IsMatch(filters.LastOrDefault(), @"^\d+$") && nOfDaysToEvent == null))
    {
        <a href="#" class="blue-text active">@linkName</a>
    }
    else
    {
        if (nOfDaysToEvent == null)
        {
            @Html.ActionLink(linkName, "Filters", new { days = -1 }, htmlAttributes: new { Class = "blue-text" }) //DIRTY HACK, remove fast as possible
        }
        else if (filters.Length == 3 && !filters[2].IsInt())
        {
           @Html.ActionLink(linkName, "Filters", new { loc = filters[2], days = nOfDaysToEvent }, htmlAttributes: new { Class = "blue-text" })
        }
        else
        {
           @Html.ActionLink(linkName, "Filters", new {days = nOfDaysToEvent}, htmlAttributes: new { Class = "blue-text" })
        }
    }

    
}

@section scripts{
    @Scripts.Render("~/Scripts/jquery.js")
    @Scripts.Render("~/Scripts/jquery-ui.js")
    @Scripts.Render("~/Scripts/listScript.js")
}
