@{
    var currentURL = Request.Url;
    ViewBag.Title = "List";
}

@using System.Globalization
@using System.Web.Mvc
@using System.Text.RegularExpressions
@using team2project.Models
@using team2project.Helpers
@using Events.Business.Helpers
@model EventListViewModel
@section css{
    @Styles.Render("~/Content/Home/List.css")
    @Styles.Render("~/Content/jquery-ui.theme.min.css")
    @Styles.Render("~/Content/jquery-ui.min.css")    
    @Styles.Render("~/Content/jquery-ui.structure.min.css")
}

@if (User.Identity.IsAuthenticated)
{
    <div class="create-event-block hide-on-med-and-down">
        <a class="large btn-floating green" href="@Url.RouteUrl("CreateEvent")"><i class="large mdi-content-add"></i></a>        
    </div>
}
 
    <h1 class="center blue-grey-text">Мероприятия</h1>
    <div id="sticky">
    <div id="select-menu-wrapper">
        <div class="width80" id="select-menu">
            <div class="ui-widget left">
                <label class="left">Город: </label>
                <div class="ui-widget m-left">
                    @Html.DropDownList("City", AvailableLocations, new { @class = "visible" })
                </div>
            </div>

            <div class="date-filters">
                @ConstructLink("Все мероприятия", PeriodStates.Anytime)
                @ConstructLink("На сегодня", PeriodStates.Today)
                @ConstructLink("На 3 дня", PeriodStates.ThreeDays)
                @ConstructLink("На неделю", PeriodStates.Week)
            </div>
        </div>
    </div>
</div>


<div class="container">
    
    <table class="striped width80 centered">
        <tbody>
            @foreach (var evnt in Model.EventsList)
            {
                <tr id="@(evnt.Id + "_row")">
                    <td class="list-events-date">
                        <div class="bg-blue-grey month">
                            @CheckDateIfNull(evnt.FromDate, "MMMM")
                        </div>
                        <div class="day color-blue-grey">
                            @CheckDateIfNull(evnt.FromDate, "dd")
                        </div>
                    </td>                    
                    <td class="list-events-img">
                        <div class="event-small-img">
                            @Html.ImageLink(evnt.Image, "Details", "Event", new { evnt.Id }, "event-img")
                        </div>
                    </td>
                    <td>
                        <div class="fixed-action-btn">
                            <a class="btn-floating btn-large bacgr-text subscribe" id="@(evnt.Id + "_sub")">
                                <i class="large"></i>
                            </a>
                        </div>
                        @if (evnt.AuthorId == User.Identity.Name)
                        {
                                <div class="right" id="event-menu">                                    
                                    <a class="btn-floating bacgr-text" href="@Url.RouteUrl("UpdateEvent", new { id=evnt.Id })"><i class="small mdi-editor-mode-edit"></i></a>
                                    <a class="btn-floating bacgr-text" onclick="deleteEvent('@evnt.Id', false); return false"><i class="small mdi-action-delete"></i></a>
                                </div>
                        }
                        
                        <div class="list-events-content">
                            <h5 class="blue-grey-text">
                                @Html.RouteLink(evnt.Title, "EventDetails", new { evnt.Id })
                            </h5>
                            <span class="list-events-location">
                                @Html.RouteLink(((String.IsNullOrEmpty(evnt.Location)) ? "Null" : evnt.Location), "EventDetails", new { evnt.Id })
                                @Html.RouteLink((evnt.FromDate != null ? evnt.FromDate.Value.ToString("H:mm") : "n/a"), "EventDetails", new { evnt.Id })
                            </span>
                            <p>              
                                @Html.RouteLink((evnt.TextDescription != null ? evnt.TextDescription.Cut(300) : evnt.Description.Cut(300)), "EventDetails", new { evnt.Id })

                            </p>
                        </div>
                        <div class="align-left">
                            <span id="@(evnt.Id + "-count")" >
                                Уже подписалось:
                                @{
                                    Html.RenderAction("Count", "Subscribers", new { id = evnt.Id });
                                }
                            </span>

                        </div>
                        <div class="align-left">
                            @if (evnt.TextDescription != null && evnt.TextDescription.Length >= 300)
                            {
                                @Html.RouteLink("Подробнее...", "EventDetails", new { evnt.Id }, new { @class = "medium-font" })
                            }
                        </div>
                    </td>                    
                </tr>                
            }
        </tbody>
    </table>
    <div id="dialog-confirm" title="Удалить это событие?" style="display: none;">
        <p>
            <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0"></span>
            Это событие будет удалено окончательно и не может быть восстановлено. Вы уверены?
        </p>
    </div>
</div>

<script>
    $(document).ready(function () {
        var stickyNavTop = $('#sticky').offset().top;

        var stickyNav = function () {
            var scrollTop = $(window).scrollTop();

            if (scrollTop+64 > stickyNavTop && $( document ).width() > 670) {
                $('#sticky').addClass('sticky-filters');
            } else {
                $('#sticky').removeClass('sticky-filters');
            }
        };

        stickyNav();

        $(window).scroll(function () {
            stickyNav();
        });

        setTimeout(function () {
            buttons = $(".subscribe");

            $.each(buttons, function (index, value) {
                $(value).toggleClass("disabled");
                $.post("/issubscribed", { id: $(value).attr("id").split("_")[0] }, function (data) {
                    if (data) {
                        $(value).addClass("unsubscribe-button");
                        $(value).find("i").addClass("mdi-action-exit-to-app");
                    }
                    else {
                        $(value).addClass("subscribe-button");
                        $(value).find("i").addClass("mdi-social-person-add");
                    }
                    $(value).toggleClass("disabled");
                    bindButton(value);
                });
            });
        }, 300);
        
        
        
    });
    var cityValue = "@Model.Location";
</script>

@helper ConstructLink(string linkName, string period)
{
    var filters = Request.Url.AbsolutePath.Split('/');

    filters[1] = HttpUtility.UrlDecode(filters[1]);
    if (filters.Length > 2)
    {
        filters[2] = HttpUtility.UrlDecode(filters[2]);
    }


    if (period == filters[2])
    {
    <a href="javascript: return false" class="blue-grey-text active routelink">@linkName</a>
    }
    else
    {
    @Html.RouteLink(linkName, "EventsList", new { period = period }, new { Class = "blue-grey-text routelink filter-link" })
    }
}

@helper CheckDateIfNull(DateTime? date, string format)
{
    if (date != null)
    {
    @date.Value.ToString(format)
    }
    else
    {
    <span>n/a</span>
    }
}

@section scripts{
    @Scripts.Render("~/Scripts/jquery-ui.js")
    @Scripts.Render("~/Scripts/jquery.zoom.min.js")
    @Scripts.Render("~/Scripts/deleteButton.js")
    @Scripts.Render("~/Scripts/listScript.js")
}
