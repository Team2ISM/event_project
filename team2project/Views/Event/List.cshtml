@{
    ViewBag.Title = "List";
    var locationId = ViewBag.location;
    var About = " ";
}

@model System.Collections.Generic.List<team2project.Models.EventViewModel>
@using System.Globalization
@using team2project.Models
@using team2project.Helpers
@using System.Text.RegularExpressions
@using Events.Business.Helpers
@section css{
    @Styles.Render("~/Content/Home/List.css")
    @Styles.Render("~/Content/jquery-ui.theme.min.css")
    @Styles.Render("~/Content/jquery-ui.min.css")    
    @Styles.Render("~/Content/jquery-ui.structure.min.css")
}


<!-- Dropdown Trigger -->
@if(!ViewBag.isFromFind)
{
    <h1 class="center blue-grey-text">Мероприятия</h1>
    <div id="sticky">
    <div id="select-menu-wrapper">
        <div class="width80" id="select-menu">
            <div class="ui-widget left">
                <label class="left">Город: </label>
                <div class="ui-widget m-left">
                    @Html.DropDownList("City", AvailableLocations, new { @class = "visible" })
                </div>
            </div>

            <div class="date-filters">
                @ConstructLink("Все мероприятия", PeriodStates.Anytime)
                @ConstructLink("На сегодня", PeriodStates.Today)
                @ConstructLink("На 3 дня", PeriodStates.ThreeDays)
                @ConstructLink("На неделю", PeriodStates.Week)
            </div>
        </div>
    </div>
</div>
}
else
{
    <h1 class="center blue-grey-text">Результаты поиска</h1>
    <script>
        $(document).ready(function () {
            $("#search").val(decodeURIComponent(document.location.href.split("/")[4]));
        });
    </script>
}

<div class="container">
    
    <table class="striped width80 centered">
        <tbody>
            @foreach (var evnt in Model)
            {
                <tr>
                    <td class="list-events-date">
                        <div class="bg-blue-grey month">
                            @CheckDateIfNull(evnt.FromDate, "MMMM")
                        </div>
                        <div class="day color-blue-grey">
                            @CheckDateIfNull(evnt.FromDate, "dd")
                        </div>
                    </td>                    
                    <td class="list-events-img">
                        <div class="event-small-img">
                            @Html.ImageLink(evnt.Image, "Details", "Event", new { evnt.Id }, "event-img")
                        </div>
                    </td>
                    <td>
                        @if (evnt.AuthorId == User.Identity.Name)
                        {
                            <div class="fixed-action-btn">
                                <a class="btn-floating btn-large bacgr-text">
                                  <i class="large mdi-social-person-add"></i>
                                </a>
                            </div>
                                <div class="right" id="event-menu">
                                    @Html.CreateLink("<i class=\"small mdi-editor-mode-edit\"></i>", "UpdateEvent", new { evnt.Id }, new { @class = "btn-floating bacgr-text" })
                                    <a class="btn-floating bacgr-text" onclick="deleteEvent('@evnt.Id'); return false"><i class="small mdi-action-delete"></i></a>
                                </div>
                        }
                        else
                        {
                            <div class="fixed-action-btn">
                                <a class="btn-floating btn-large bacgr-text">
                                  <i class="large mdi-social-person-add"></i>
                                </a>
                            </div>
                        }
                        <div class="list-events-content">
                            <h5 class="blue-grey-text">
                                @Html.RouteLink(evnt.Title, "EventDetails", new { evnt.Id })
                            </h5>
                            <span class="list-events-location">
                                @Html.RouteLink(((String.IsNullOrEmpty(evnt.Location)) ? "Null" : evnt.Location), "EventDetails", new { evnt.Id })
                                @Html.RouteLink((evnt.FromDate != null ? evnt.FromDate.Value.ToString("H:mm") : "n/a"), "EventDetails", new { evnt.Id })
                            </span>
                            <p>
                                @if (evnt.TextDescription != null && evnt.TextDescription.Length >= 300)
                                {
                                    About = "Подробнее...";
                                }
                                @Html.RouteLink((evnt.TextDescription != null ? evnt.TextDescription.Cut(300) : evnt.Description.Cut(300)) + About, "EventDetails", new { evnt.Id })
                                @{About = " ";}
                            </p>
                        </div>
                        <div class="left">
                            <label>Уже подписалось:</label>
                            @{
                                Html.RenderAction("Count", "Subscribers", new { id = evnt.Id });
                            }
                        </div>
                    </td>                    
                </tr>                
            }
        </tbody>
    </table>
    <div id="dialog-confirm" title="Удалить это событие?" style="display: none;">
        <p>
            <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0"></span>
            Это событие будет удалено окончательно и не может быть восстановлено. Вы уверены?
        </p>
    </div>
</div>

<script>
    $(document).ready(function () {
        var stickyNavTop = $('#sticky').offset().top;

        var stickyNav = function () {
            var scrollTop = $(window).scrollTop();

            if (scrollTop+64 > stickyNavTop) {
                $('#sticky').addClass('sticky-filters');
            } else {
                $('#sticky').removeClass('sticky-filters');
            }
        };

        stickyNav();

        $(window).scroll(function () {
            stickyNav();
        });
    });
    var cityValue = "@locationId";
</script>

@helper ConstructLink(string linkName, string period)
{
    var filters = Request.Url.AbsolutePath.Split('/');

    filters[1] = HttpUtility.UrlDecode(filters[1]);
    if (filters.Length > 2)
    {
        filters[2] = HttpUtility.UrlDecode(filters[2]);
    }


    if (period == filters[2])
    {
    <a href="javascript: return false" class="blue-grey-text active routelink">@linkName</a>
    }
    else
    {
    @Html.RouteLink(linkName, "EventsList", new { period = period }, new { Class = "blue-grey-text routelink filter-link" })
    }
}

@helper CheckDateIfNull(DateTime? date, string format)
{
    if (date != null)
    {
    @date.Value.ToString(format)
    }
    else
    {
    <span>n/a</span>
    }
}

@section scripts{
    @Scripts.Render("~/Scripts/jquery.js")
    @Scripts.Render("~/Scripts/jquery-ui.js")
    @Scripts.Render("~/Scripts/jquery.zoom.min.js")
    @Scripts.Render("~/Scripts/deleteButton.js")
    @Scripts.Render("~/Scripts/listScript.js")
}
